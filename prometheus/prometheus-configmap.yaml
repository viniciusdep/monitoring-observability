# Configs e métricas dentro do prometheus
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.rules: |-
    groups:    
    - name: slack
      rules:

      - alert: Api de Clientes
        expr: up{job='api-clientes'} == 0
        for: 1m
        labels:
          team: slack_demo
          severity: high
        annotations:
          summary: "{{ $labels.instance }} está fora do ar."
          description: "Verifique o serviços {{ $labels.instance }} da aplicação"

      - alert: Api de Enderecos
        expr: up{instance="svc-api-enderecos.default.svc.cluster.local:80"} == 0
        for: 1m
        labels:
          team: slack_demo
          severity: high
        annotations:
          summary: "{{ $labels.instance }} está fora do ar."
          description: "Verifique o serviços {{ $labels.instance }} da aplicação"

      - alert: Api de Produtos
        expr: up{instance="svc-api-produtos.default.svc.cluster.local:80"} == 0
        for: 1m
        labels:
          team: slack_demo
          severity: high
        annotations:
          summary: "{{ $labels.instance }} está fora do ar."
          description: "Verifique o serviços {{ $labels.instance }} da aplicação"

      - alert: Api de Vendas
        expr: up{instance="svc-api-vendas.default.svc.cluster.local:80"} == 0
        for: 1m
        labels:
          team: slack_demo
          severity: high
        annotations:
          summary: "{{ $labels.instance }} está fora do ar."
          description: "Verifique o serviços {{ $labels.instance }} da aplicação"

      # - alert: HostOutOfMemory
      #   expr: node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes * 100 < 10
      # kube_node_status_allocatable_memory_bytes / kube_node_status_capacity_memory_bytes * 100 < 90
      #   for: 10m
      #   labels:
      #     team: slack_demo
      #     severity: warning
      #   annotations:
      #     summary: "O node {{ $labels.instance }} está ficando sem memória"
      #     description: "A memória do node está muito alta.\n  Valor = {{ $value }}\n  Labels = {{ $labels }}

      # - alert: HostHighCpuLoad
      #   expr: 100 - (avg by(instance) (rate(process_cpu_seconds_total{mode="idle"}[2m])) * 100) > 80
      #   for: 1m
      #   labels:
      #     team: slack_demo
      #     severity: warning
      #   annotations:
      #     summary: Alta carga de CPU (instance {{ $labels.instance }})
      #     description: "A carga da CPU do Node é > 80%.\n  Valor = {{ $value }}\n  Labels = {{ $labels }}"
    

      # - alert: KubernetesPodNotHealthy SIM
      #   expr: min_over_time(sum by (namespace, pod) (kube_pod_status_phase{phase=~"Pending|Unknown|Failed"})[5m:1m]) > 0
      #   for: 1m
      #   labels:
      #     team: slack_demo
      #     severity: critical
      #   annotations:
      #     summary: "Pod do kubernetes não está saudável {{ $labels.instance }}"
      #     description: "O pod está em um estado não saudável por mais de 10 minutos.\n  Valor = {{ $value }}\n  Labels = {{ $labels }}"
 
      # - alert: KubernetesNodeReady SIM
      #   expr: kube_node_status_condition{condition="Ready",status="true"} == 0
      #   for: 10m
      #   labels:
      #     team: slack_demo
      #     severity: critical
      #   annotations:
      #     summary: "Node prontos. (instance {{ $labels.instance }})"
      #     description: "O Node {{ $labels.node }} não está preparado há muito tempo.\n  Valor = {{ $value }}\n  Labels = {{ $labels }}"
 
      # - alert: KubernetesDeploymentGenerationMismatch SIM
      #   expr: kube_deployment_status_observed_generation != kube_deployment_metadata_generation
      #   for: 5m
      #   labels:
      #     team: slack_demo
      #     severity: critical
      #   annotations:
      #     summary: "Existe um deployment falho. (instance {{ $labels.instance }})"
      #     description: "Um deployment falhou, mas não foi revertida.\n  Valor = {{ $value }}\n  Labels = {{ $labels }}"

    
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
    alerting:
      alertmanagers:
      - scheme: http
        path_prefix: /alertmanager
        static_configs:
        - targets:
          - "vika.alertmanager.tech-talent.cf" #- targets: ['alertmanager:9093']

    scrape_configs:
      - job_name: 'kubernetes-apiservers'

        kubernetes_sd_configs:
        - role: endpoints
        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

      - job_name: 'kubernetes-nodes'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

      
      - job_name: 'kubernetes-pods'

        kubernetes_sd_configs:
        - role: pod

        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

      - job_name: 'kubernetes-cadvisor'

        scheme: https

        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token

        kubernetes_sd_configs:
        - role: node

        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      
      - job_name: 'kubernetes-service-endpoints'

        kubernetes_sd_configs:
        - role: endpoints

        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
      # - job_name: 'api-clientes'
      #   static_configs: 
      #     - targets: ['svc-api-clientes:5100']

      # - job_name: 'api-enderecos'
      #   static_configs: 
      #     - targets: ['svc-api-enderecos:5200']

      # - job_name: 'api-produtos'
      #   static_configs: 
      #     - targets: ['svc-api-produtos:5300']

      # - job_name: 'api-vendas'
      #   static_configs: 
      #     - targets: ['svc-api-vendas:5400']

      - job_name: api-clientes
        scrape_interval: 15s
        scrape_timeout: 10s
        metrics_path: /metrics/clientes
        scheme: http
        static_configs:
        - targets:
          - INSERIR_URL

      - job_name: api-enderecos
        scrape_interval: 15s
        scrape_timeout: 10s
        metrics_path: /metrics/enderecos
        scheme: http
        static_configs:
        - targets:
          - INSERIR_URL

      - job_name: api-produtos
        scrape_interval: 15s
        scrape_timeout: 10s
        metrics_path: /metrics/produtos
        scheme: http
        static_configs:
        - targets:
          - INSERIR_URL

      - job_name: api-inventario
        scrape_interval: 15s
        scrape_timeout: 10s
        metrics_path: /metrics/vendas
        scheme: http
        static_configs:
        - targets:
          - INSERIR_URL
    

